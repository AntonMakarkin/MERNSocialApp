{"version":3,"sources":["constants/actionTypes.js","reducers/posts.js","reducers/index.js","api/index.js","images/memories.png","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","styles.js","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","LIKE","posts","action","type","filter","post","_id","payload","map","combineReducers","url","updatePost","id","axios","patch","deletePost","delete","likePost","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","tags","tag","gutterBottom","CardContent","component","message","CardActions","a","api","data","console","log","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","p","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01208390.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const LIKE = 'LIKE';","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nconst posts = (posts = [], action) => {  //posts = state\r\n    switch (action.type) {\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        case FETCH_ALL:\r\n            return action.payload; //our posts\r\n        case CREATE:\r\n            return [...posts, action.payload];\r\n        case UPDATE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post); //action payload - new updated item\r\n        case LIKE:  \r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post); //action payload - new updated item\r\n        default:\r\n            return posts;\r\n    }\r\n} \r\n\r\nexport default posts;","import { combineReducers } from 'redux';\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({posts}); ","import axios from 'axios';\r\n\r\nconst url = 'https://memories-app-demo-ver.herokuapp.com/posts';\r\n\r\nexport const fetchPosts = () => axios.get(url);\r\nexport const createPost = (newPost) => axios.post(url, newPost);\r\nexport const updatePost = (id, updatePost) => axios.patch(`${url}/${id}`, updatePost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        backgroundBlendMode: 'darken'\r\n    },\r\n    border: {\r\n        border: 'solid'\r\n    },\r\n    fullHeightCard: {\r\n        height: '100%'\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        borderRadius: '15px',\r\n        height: '100%',\r\n        position: 'relative'\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: '20px',\r\n        left: '20px',\r\n        color: 'white'\r\n    },\r\n    overlay2: {\r\n        position: 'absolute',\r\n        top: '20px',\r\n        right: '20px',\r\n        color: 'white'\r\n    },\r\n    grid: {\r\n        display: 'flex'\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        margin: '20px'\r\n    },\r\n    title: {\r\n        padding: '0 16px'\r\n    },\r\n    cardActions: {\r\n        padding: '0 16px 8px 16px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n})","import React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport useStyles from './styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deletePost, likePost } from '../../../actions/posts';\r\n\r\nconst Post = ({post, setCurrentId}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title}/>\r\n            <div className={classes.overlay}>\r\n                <Typography variant=\"h6\">{post.creator}</Typography>\r\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n            </div>\r\n            <div className={classes.overlay2}>\r\n                <Button style={{color: 'white'}} size=\"small\" onClick={() => setCurrentId(post._id)}>\r\n                    <MoreHorizIcon fontSize=\"default\"/>\r\n                </Button>\r\n            </div>\r\n            <div className={classes.details}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n            </div>\r\n            <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}>\r\n                    <ThumbUpAltIcon fontSize=\"small\"/>\r\n                    &nbsp; Like &nbsp; {/*space*/}\r\n                    {post.likeCount}\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\r\n                    <DeleteIcon fontSize=\"small\"/>\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nimport * as api from '../api';\r\n\r\n//Action Creators\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts();\r\n        dispatch({ type: FETCH_ALL, payload: data})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPost(post);\r\n        dispatch({ type: CREATE, payload: data })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n        dispatch({ type: UPDATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch({ type: DELETE, payload: id });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n        dispatch({ type: LIKE, payload: data})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    actionDiv: {\r\n        textAlign: 'center'\r\n    }\r\n}));","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport Post from './Post/Post';\r\nimport useStyles from './styles';\r\n\r\nconst Posts = ({setCurrentId}) => {\r\n    const posts = useSelector((state) => state.posts);\r\n    const classes = useStyles();\r\n    console.log(posts);\r\n    return (\r\n        !posts.length ? <CircularProgress/> : (\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n                {posts.map(post => (\r\n                    <Grid key={post._id} item xs={12} sm={6}>\r\n                        <Post post={post} setCurrentId={setCurrentId}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Posts;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    },\r\n    fileInput: {\r\n        width: '97%',\r\n        margin: '10px 0'\r\n    },\r\n    buttonSubmit: {\r\n        marginBottom: 10\r\n    }\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\n//get the current id\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const [postData, setPostData] = useState({creator: '', title: '', message: '', tags: '', selectedFile: ''});\r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(post) setPostData(post);\r\n    }, [post]) //when array changes, then call the callback function\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(currentId) {\r\n            dispatch(updatePost(currentId, postData));\r\n        } else {\r\n            dispatch(createPost(postData)); //postData - action\r\n        }\r\n\r\n        clear();\r\n\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(null); //changing a currentId - calls useEffect in App\r\n        setPostData({creator: '', title: '', message: '', tags: '', selectedFile: ''});\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\r\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator}\r\n                    onChange={(e) => setPostData({ ...postData, creator: e.target.value })} //to prevent an overwrite of all fields (only one field) \r\n                />\r\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title}\r\n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })} //to prevent an overwrite of all fields (only one field) \r\n                />\r\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message}\r\n                    onChange={(e) => setPostData({ ...postData, message: e.target.value })} //to prevent an overwrite of all fields (only one field) \r\n                />\r\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags}\r\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} //to prevent an overwrite of all fields (only one field) \r\n                />\r\n                <div className={classes.fileInput}>\r\n                    <FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({...postData, selectedFile: base64})}/>\r\n                </div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n        borderRadius: 15,\r\n        margin: '30px 0',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    heading: {\r\n        color: 'rgba(0,183,255,1)'\r\n    },\r\n    image: {\r\n        marginLeft: '15px'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n        mainContainer: {\r\n            flexDirection: 'column-reverse'\r\n        }\r\n    }\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getPosts } from './actions/posts';\r\nimport memories from './images/memories.png';\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\nimport useStyles from './styles';\r\n\r\nconst App = () => {\r\n    const [ currentId, setCurrentId ] = useState(null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts());\r\n    }, [currentId, dispatch]);\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\r\n                <img className={classes.image} src={memories} alt=\"memories\" height=\"60\"/>\r\n            </AppBar>\r\n            <Grow in>\r\n                <Container>\r\n                    <Grid container className={classes.mainContainer} justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n                    <Grid item xs={12} sm={7}>\r\n                        <Posts setCurrentId={setCurrentId}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Form currentId={currentId} setCurrentId={setCurrentId}/>\r\n                    </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Grow>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk))); //48:41-\r\n\r\nReactDOM.render(\r\n    <Provider store={store}> \r\n        <App/>\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}